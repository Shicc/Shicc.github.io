<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>GeekShi</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://shic.top/"/>
  <updated>2018-07-14T01:48:20.930Z</updated>
  <id>http://shic.top/</id>
  
  <author>
    <name>this.Shi</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>和这段IP说再见了</title>
    <link href="http://shic.top/2018/07/08/10-322/"/>
    <id>http://shic.top/2018/07/08/10-322/</id>
    <published>2018-07-07T16:00:00.000Z</published>
    <updated>2018-07-14T01:48:20.930Z</updated>
    
    <content type="html"><![CDATA[<p>实验室要换地方了，搬走前还是很留念的。。。<br><a id="more"></a><br>在那这段IP合个影吧，还记得我常用的211/233主机号，还记得在这里敲过的代码，322再见了。</p>
<center><img src="http://res.cloudinary.com/shi1996/image/upload/v1531532439/IMG_20180714_093659_mc2zbo.jpg" alt=""></center><br><center><img src="http://res.cloudinary.com/shi1996/image/upload/v1531532435/IMG_20180714_093723_f0ahwc.jpg" alt=""></center>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;实验室要换地方了，搬走前还是很留念的。。。&lt;br&gt;
    
    </summary>
    
      <category term="Others" scheme="http://shic.top/categories/Others/"/>
    
    
      <category term="Others" scheme="http://shic.top/tags/Others/"/>
    
  </entry>
  
  <entry>
    <title>Spring Boot+Spring Data JPA+Thymeleaf(一)</title>
    <link href="http://shic.top/2018/03/08/Spring%20Boot1/"/>
    <id>http://shic.top/2018/03/08/Spring Boot1/</id>
    <published>2018-03-07T16:00:10.000Z</published>
    <updated>2018-03-08T05:52:47.094Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Spring Boot：颠覆Java EE开发</strong><br><a id="more"></a></p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>或许你听过Spring,Struts2,Hibernate的SSH整合开发框架，你可能也用过Spring,SpringMVC,Mybatis的SSM,但它们都或多或少的有些麻烦，大量的配置文件也不利于专注于代码的编写。那么全新的Spring Boot+Spring Data JPA+Thymeleaf开发模式能让你感觉原来Java Web也可以变得简单<br><br><br>Spring Boot在2014年面市后，一路高歌猛进，大有颠覆Java EE开发的趋势，它的配置少，对其他框架有整合开发的特点，能让编码人员专注于自己的业务代码的编写而不会时不时就是编写大量的配置文件。让开发也变得高效和便捷。如果你也想学习Java Web的开发，那么直接学习Spring Boot是你最好的选择！<br><br></p>
<h2 id="关于本套视频"><a href="#关于本套视频" class="headerlink" title="关于本套视频"></a>关于本套视频</h2><p>视频制作于2017年11月初，本次对视频资源做了以下调整和优化：</p>
<ul>
<li>视频以一个用户登录注册的例子来进行讲解，不会涉及太多功能和代码，主要起普及Spring Boot的作用，方便初学者学习和入门Spring Boot。</li>
<li>切分视频为6段，分段学习降低因篇幅过长的困扰</li>
<li>去除广告的困扰，看视频没广告</li>
<li>视频清晰度全调整为1080P的全高清，代码段清晰可见</li>
<li>由于没有写过稿子直接讲解和录制的，所以难免在会有点语误，还希望大家理解。如有不理解的地方，请在某一节的视频页面下面留言。</li>
</ul>
<h2 id="上车学习"><a href="#上车学习" class="headerlink" title="上车学习"></a>上车学习</h2><p><strong>第一节：简单介绍了一下spring boot，从打开IED开始，到配置yml文件止</strong></p>
<iframe height="366" width="650" src="https://www.yylep.com/f-1609-ck/36a0445a.flv?m3u8=1" controls="controls">allowfullscreen=”allowfullscreen”&gt;</iframe>

]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Spring Boot：颠覆Java EE开发&lt;/strong&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Spring Boot" scheme="http://shic.top/categories/Spring-Boot/"/>
    
    
      <category term="Spring Boot" scheme="http://shic.top/tags/Spring-Boot/"/>
    
  </entry>
  
  <entry>
    <title>Spring Boot+Spring Data JPA+Thymeleaf(二)</title>
    <link href="http://shic.top/2018/03/08/Spring%20Boot2/"/>
    <id>http://shic.top/2018/03/08/Spring Boot2/</id>
    <published>2018-03-07T16:00:09.000Z</published>
    <updated>2018-03-08T05:30:26.716Z</updated>
    
    <content type="html"><![CDATA[<p><strong>第二节：配置yml文件-&gt;在数据库查找学生</strong><br><a id="more"></a></p>
<h2 id="关于本套视频"><a href="#关于本套视频" class="headerlink" title="关于本套视频"></a>关于本套视频</h2><p>视频制作于2017年11月初，本次对视频资源做了以下调整和优化：</p>
<ul>
<li>视频以一个用户登录注册的例子来进行讲解，不会涉及太多功能和代码，主要起普及Spring Boot的作用，方便初学者学习和入门Spring Boot。</li>
<li>切分视频为6段，分段学习降低因篇幅过长的困扰</li>
<li>去除广告的困扰，看视频没广告</li>
<li>视频清晰度全调整为1080P的全高清，代码段清晰可见</li>
<li>由于没有写过稿子直接讲解和录制的，所以难免在会有点语误，还希望大家理解。如有不理解的地方，请在某一节的视频页面下面留言。</li>
</ul>
<h2 id="上车学习"><a href="#上车学习" class="headerlink" title="上车学习"></a>上车学习</h2><iframe height="366" width="650" src="https://www.yylep.com/f-1609-ck/bc5a8ed7.flv?m3u8=1" frameborder="0" allowfullscreen="allowfullscreen"></iframe>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;第二节：配置yml文件-&amp;gt;在数据库查找学生&lt;/strong&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Spring Boot" scheme="http://shic.top/categories/Spring-Boot/"/>
    
    
      <category term="Spring Boot" scheme="http://shic.top/tags/Spring-Boot/"/>
    
  </entry>
  
  <entry>
    <title>Spring Boot+Spring Data JPA+Thymeleaf(三)</title>
    <link href="http://shic.top/2018/03/08/Spring%20Boot3/"/>
    <id>http://shic.top/2018/03/08/Spring Boot3/</id>
    <published>2018-03-07T16:00:08.000Z</published>
    <updated>2018-03-08T05:30:22.205Z</updated>
    
    <content type="html"><![CDATA[<p><strong>第三节：讲解数据库连接层的测试</strong><br><a id="more"></a></p>
<h2 id="关于本套视频"><a href="#关于本套视频" class="headerlink" title="关于本套视频"></a>关于本套视频</h2><p>视频制作于2017年11月初，本次对视频资源做了以下调整和优化：</p>
<ul>
<li>视频以一个用户登录注册的例子来进行讲解，不会涉及太多功能和代码，主要起普及Spring Boot的作用，方便初学者学习和入门Spring Boot。</li>
<li>切分视频为6段，分段学习降低因篇幅过长的困扰</li>
<li>去除广告的困扰，看视频没广告</li>
<li>视频清晰度全调整为1080P的全高清，代码段清晰可见</li>
<li>由于没有写过稿子直接讲解和录制的，所以难免在会有点语误，还希望大家理解。如有不理解的地方，请在某一节的视频页面下面留言。</li>
</ul>
<h2 id="上车学习"><a href="#上车学习" class="headerlink" title="上车学习"></a>上车学习</h2><iframe height="366" width="650" src="https://www.yylep.com/f-1609-ck/dbfa1e57.flv?m3u8=1" frameborder="0" allowfullscreen="allowfullscreen"></iframe>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;第三节：讲解数据库连接层的测试&lt;/strong&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Spring Boot" scheme="http://shic.top/categories/Spring-Boot/"/>
    
    
      <category term="Spring Boot" scheme="http://shic.top/tags/Spring-Boot/"/>
    
  </entry>
  
  <entry>
    <title>Spring Boot+Spring Data JPA+Thymeleaf(四)</title>
    <link href="http://shic.top/2018/03/08/Spring%20Boot4/"/>
    <id>http://shic.top/2018/03/08/Spring Boot4/</id>
    <published>2018-03-07T16:00:07.000Z</published>
    <updated>2018-03-08T05:30:17.452Z</updated>
    
    <content type="html"><![CDATA[<p><strong>第四节：讲解控制层的编写</strong><br><a id="more"></a></p>
<h2 id="关于本套视频"><a href="#关于本套视频" class="headerlink" title="关于本套视频"></a>关于本套视频</h2><p>视频制作于2017年11月初，本次对视频资源做了以下调整和优化：</p>
<ul>
<li>视频以一个用户登录注册的例子来进行讲解，不会涉及太多功能和代码，主要起普及Spring Boot的作用，方便初学者学习和入门Spring Boot。</li>
<li>切分视频为6段，分段学习降低因篇幅过长的困扰</li>
<li>去除广告的困扰，看视频没广告</li>
<li>视频清晰度全调整为1080P的全高清，代码段清晰可见</li>
<li>由于没有写过稿子直接讲解和录制的，所以难免在会有点语误，还希望大家理解。如有不理解的地方，请在某一节的视频页面下面留言。</li>
</ul>
<h2 id="上车学习"><a href="#上车学习" class="headerlink" title="上车学习"></a>上车学习</h2><iframe height="366" width="650" src="https://www.yylep.com/f-1609-ck/37bdaed9.flv?m3u8=1" frameborder="0" allowfullscreen="allowfullscreen"></iframe>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;第四节：讲解控制层的编写&lt;/strong&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Spring Boot" scheme="http://shic.top/categories/Spring-Boot/"/>
    
    
      <category term="Spring Boot" scheme="http://shic.top/tags/Spring-Boot/"/>
    
  </entry>
  
  <entry>
    <title>Spring Boot+Spring Data JPA+Thymeleaf(五）</title>
    <link href="http://shic.top/2018/03/08/Spring%20Boot5/"/>
    <id>http://shic.top/2018/03/08/Spring Boot5/</id>
    <published>2018-03-07T16:00:06.000Z</published>
    <updated>2018-03-08T06:00:37.445Z</updated>
    
    <content type="html"><![CDATA[<p><strong>第五节：完善控制层，结合Thymeleaf做前端</strong><br><a id="more"></a></p>
<h2 id="关于本套视频"><a href="#关于本套视频" class="headerlink" title="关于本套视频"></a>关于本套视频</h2><p>视频制作于2017年11月初，本次对视频资源做了以下调整和优化：</p>
<ul>
<li>视频以一个用户登录注册的例子来进行讲解，不会涉及太多功能和代码，主要起普及Spring Boot的作用，方便初学者学习和入门Spring Boot。</li>
<li>切分视频为6段，分段学习降低因篇幅过长的困扰</li>
<li>去除广告的困扰，看视频没广告</li>
<li>视频清晰度全调整为1080P的全高清，代码段清晰可见</li>
<li>由于没有写过稿子直接讲解和录制的，所以难免在会有点语误，还希望大家理解。如有不理解的地方，请在某一节的视频页面下面留言。</li>
</ul>
<h2 id="上车学习"><a href="#上车学习" class="headerlink" title="上车学习"></a>上车学习</h2><iframe height="366" width="650" src="https://www.yylep.com/f-1609-ck/501d3e59.flv?m3u8=1" frameborder="0" allowfullscreen="allowfullscreen"></iframe>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;第五节：完善控制层，结合Thymeleaf做前端&lt;/strong&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Spring Boot" scheme="http://shic.top/categories/Spring-Boot/"/>
    
    
      <category term="Spring Boot" scheme="http://shic.top/tags/Spring-Boot/"/>
    
  </entry>
  
  <entry>
    <title>Spring Boot+Spring Data JPA+Thymeleaf(六)</title>
    <link href="http://shic.top/2018/03/08/Spring%20Boot6/"/>
    <id>http://shic.top/2018/03/08/Spring Boot6/</id>
    <published>2018-03-07T16:00:05.000Z</published>
    <updated>2018-03-08T06:33:18.551Z</updated>
    
    <content type="html"><![CDATA[<p><strong>第六节：测试和结尾</strong><br><a id="more"></a></p>
<h2 id="关于本套视频"><a href="#关于本套视频" class="headerlink" title="关于本套视频"></a>关于本套视频</h2><p>视频制作于2017年11月初，本次对视频资源做了以下调整和优化：</p>
<ul>
<li>视频以一个用户登录注册的例子来进行讲解，不会涉及太多功能和代码，主要起普及Spring Boot的作用，方便初学者学习和入门Spring Boot。</li>
<li>切分视频为6段，分段学习降低因篇幅过长的困扰</li>
<li>去除广告的困扰，看视频没广告</li>
<li>视频清晰度全调整为1080P的全高清，代码段清晰可见</li>
<li>由于没有写过稿子直接讲解和录制的，所以难免在会有点语误，还希望大家理解。如有不理解的地方，请在某一节的视频页面下面留言。</li>
</ul>
<h2 id="上车学习"><a href="#上车学习" class="headerlink" title="上车学习"></a>上车学习</h2><iframe height="366" width="650" src="https://www.yylep.com/p-1609-ck?path=/计算机学习/spring boot自制/6C.flv" frameborder="0" allowfullscreen="allowfullscreen"></iframe>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;第六节：测试和结尾&lt;/strong&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Spring Boot" scheme="http://shic.top/categories/Spring-Boot/"/>
    
    
      <category term="Spring Boot" scheme="http://shic.top/tags/Spring-Boot/"/>
    
  </entry>
  
  <entry>
    <title>爬爬音乐</title>
    <link href="http://shic.top/2018/02/21/%E7%88%AC%E7%88%AC%E9%9F%B3%E4%B9%90/"/>
    <id>http://shic.top/2018/02/21/爬爬音乐/</id>
    <published>2018-02-20T16:00:01.000Z</published>
    <updated>2018-02-21T09:55:05.393Z</updated>
    
    <content type="html"><![CDATA[<p>喜欢音乐请支持正版，代码仅作学习交流。<br><a id="more"></a><br>意外发现国内某知名音乐网站很好爬，也没有做什么反爬机制。电脑太卡已经容不下一个任何一个多余软件了。。。于是直接下载音乐吧，就不要软件了，用一个Python写的爬虫自己播放音乐，自己下载。（喜欢音乐请支持正版（￣。。￣）。。。）</p>
<h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><ul>
<li>Python3.6 <a href="https://www.python.org/" target="_blank" rel="external">点击下载Python并自行安装</a><br>  所需格外的模块：<ul>
<li>BeautifulSoup4</li>
<li>selenium</li>
<li>requests</li>
<li>Jupyter Notebook 关于win10安装jupyter有些坑，<a href="http://shic.top/2017/12/23/%E9%9A%8F%E7%AC%94%EF%BC%9A%E5%85%A5%E9%97%A8%E6%89%80%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/">详情请点击</a></li>
</ul>
</li>
<li>Windows 10 电脑，<a href="https://developer.microsoft.com/en-us/microsoft-edge/tools/webdriver/" target="_blank" rel="external">点击下载浏览器驱动</a></li>
</ul>
<h3 id="爬虫脚本"><a href="#爬虫脚本" class="headerlink" title="爬虫脚本"></a>爬虫脚本</h3><p>去一下国内某知名音乐网站看看，让脚本自己播放音乐并下载到本地<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"># 为爬取下载做好准备工作</div><div class="line">from selenium import webdriver</div><div class="line">from bs4 import BeautifulSoup</div><div class="line">import requests</div><div class="line">import time</div><div class="line">import os</div><div class="line">from selenium.webdriver.chrome.options import Options</div><div class="line"></div><div class="line">os.makedirs(&apos;./download_music/&apos;, exist_ok=True) # 下载文件夹就在该脚本所在的目录</div><div class="line">base_url = &quot;http://www.kugou.com/yy/html/search.html#searchType=song&amp;searchKeyWord=&quot;</div></pre></td></tr></table></figure></p>
<p>在代码里模拟输入，你就当作是一个可视化的窗口输入就行了，这里分享一下核心代码就行了嘻嘻~<br>注意：</p>
<ul>
<li>请根据自己存放的浏览器驱动MicrosoftWebDriver.exe更改下面代码第五行的位置。</li>
<li>如果网络不好，适当调大一些下面代码中的time.sleep(x)的x的数值。</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line"># 搜索-爬取-下载</div><div class="line">search = &quot;烈酒 屈原&quot;  #模拟输入要搜索的歌曲</div><div class="line">url = base_url+search</div><div class="line"></div><div class="line">driver = webdriver.Edge(executable_path=&quot;.\MicrosoftWebDriver.exe&quot;,)</div><div class="line">driver.get(url)</div><div class="line">time.sleep(2)</div><div class="line"></div><div class="line"># 获取搜索列表里的第一首单曲的名字，这样就实现了模糊匹配了</div><div class="line">html_search = driver.page_source</div><div class="line">soup_search = BeautifulSoup(html_search, &apos;lxml&apos;)</div><div class="line">music_a_table = soup_search.find(&apos;a&apos;,&#123;&quot;class&quot;:&quot;song_name&quot;&#125;)</div><div class="line">music_name = music_a_table[&apos;title&apos;] # 酷狗中的单曲名字是在该音乐a标签里的title属性值里的</div><div class="line"></div><div class="line">print(music_name)</div><div class="line"># 这里还有模糊匹配，下面代码是匹配含有次字符串的链接</div><div class="line"># driver.find_element_by_partial_link_text(music_name).click()</div><div class="line">driver.find_element_by_link_text(music_name).click() #当然这里就没必要模糊匹配了</div><div class="line"></div><div class="line"># 获取浏览器窗口句柄</div><div class="line">handles = driver.window_handles</div><div class="line"># print(handles,type(handles))</div><div class="line">driver.switch_to_window(handles[-1])</div><div class="line"></div><div class="line">#之前一直找不到链接，还是要让爬虫缓几秒。不知为何，page_source应该都下载好了的。。</div><div class="line">time.sleep(2)</div><div class="line"></div><div class="line">html = driver.page_source</div><div class="line">soup = BeautifulSoup(html, &apos;lxml&apos;)</div><div class="line">audio = soup.find(&apos;audio&apos;,&#123;&quot;class&quot;:&quot;music&quot;&#125;)  #只有一个audio标签，且该网站里的audio类型是music</div><div class="line">music_src = audio[&apos;src&apos;]</div><div class="line"></div><div class="line">r = requests.get(music_src,stream=True)</div><div class="line">image_name = music_name+&apos;.&apos;+music_src.split(&apos;.&apos;)[-1]</div><div class="line">with open(&apos;./download_music/%s&apos; % image_name, &apos;wb&apos;) as f:</div><div class="line">    for chunk in r.iter_content(chunk_size = 512):</div><div class="line">        f.write(chunk)</div><div class="line">    print(&apos;已保存文件： %s&apos; % image_name)</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;喜欢音乐请支持正版，代码仅作学习交流。&lt;br&gt;
    
    </summary>
    
      <category term="Python" scheme="http://shic.top/categories/Python/"/>
    
    
      <category term="Python" scheme="http://shic.top/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>代码本地管理之Git</title>
    <link href="http://shic.top/2018/02/21/use_git/"/>
    <id>http://shic.top/2018/02/21/use_git/</id>
    <published>2018-02-20T16:00:00.000Z</published>
    <updated>2018-02-21T09:17:28.337Z</updated>
    
    <content type="html"><![CDATA[<p>是时候放弃手动的管理版本的方式了，你需要Git<br><a id="more"></a></p>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><ul>
<li>首先将Git安装到自己的电脑，<a href="https://git-scm.com/" target="_blank" rel="external">Git官网</a></li>
<li>配置好自己的Git</li>
</ul>
<h3 id="在编译器中使用Git版本管理"><a href="#在编译器中使用Git版本管理" class="headerlink" title="在编译器中使用Git版本管理"></a>在编译器中使用Git版本管理</h3><p><strong>以Pycharm为例的操作详情图文版，迁移你的文档至git版本管理</strong></p>
<center><img src="http://res.cloudinary.com/shi1996/image/upload/v1519203905/git0_mxeug2.png" alt=""></center><br>Pycharm中不会显示.git的文件夹，但实际上是存在的，我们这个仓库是创建成功的<br><center><img src="http://res.cloudinary.com/shi1996/image/upload/v1519204290/git1_syhypy.png" alt=""></center><br>然后我们向版本库中添加一个文件，在提交（附带上更改的信息）再查看一下<br><center><img src="http://res.cloudinary.com/shi1996/image/upload/v1519204342/git2_rfm3bq.png" alt=""></center><br>当我们把一些文件提交到git仓库中后，文件名的颜色又变正常了<br><center><img src="http://res.cloudinary.com/shi1996/image/upload/v1519204408/git3_wwkvpv.png" alt=""></center><br>当我们更改了一个文件里的内容后，再命令行中查看<br><center><img src="http://res.cloudinary.com/shi1996/image/upload/v1519204438/git4_wm4nqf.png" alt=""></center><br>然后提交这个更改（注意-am和-m的差别）<br><center><img src="http://res.cloudinary.com/shi1996/image/upload/v1519204475/git5_sox5b3.png" alt=""></center><br>然后我们回到改之前 git checkout <em>*</em> – file_name<br><center><img src="http://res.cloudinary.com/shi1996/image/upload/v1519204551/git6_luuhas.png" alt=""></center>

<p>发现文件的确改变了，这对于我们每一个更改了很大一部分代码后再想回到过去很有效率，这样版本控制的作用就体现出来了。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;是时候放弃手动的管理版本的方式了，你需要Git&lt;br&gt;
    
    </summary>
    
      <category term="Python" scheme="http://shic.top/categories/Python/"/>
    
      <category term="Git" scheme="http://shic.top/categories/Python/Git/"/>
    
    
      <category term="Python" scheme="http://shic.top/tags/Python/"/>
    
      <category term="Git" scheme="http://shic.top/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>2017 念念不忘 必有回响</title>
    <link href="http://shic.top/2018/02/15/2017recollect/"/>
    <id>http://shic.top/2018/02/15/2017recollect/</id>
    <published>2018-02-14T16:00:00.000Z</published>
    <updated>2018-02-16T05:33:18.595Z</updated>
    
    <content type="html"><![CDATA[<p>现在总给我一种感觉，时间越走越快，还没来得及封装成记忆，它又带来了全新的一年。。。<br><a id="more"></a></p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=22712173&auto=1&height=66"></iframe>

<p><br><br>我在看暴走大事件的时候，有一期提到了念念不忘，必有回响，深深地触动了我的神经，因为今年所经历了比往年都多得多的事情，也做了很多疯狂而有趣的事。<br><br><br>记忆是自己的，但照片却能让我们产生共鸣，2017是忙碌的一年,累的对自己喜欢的专业产生了怀疑，但也高兴过，因为自己又突破了一个难关，取得了进步。<br>每天关闭电脑前，都仿佛电脑也如释重负，有时候真的很累，但希望自己能够坚持。</p>
<center><img src="http://res.cloudinary.com/shi1996/image/upload/v1518684587/ram_ftexej.png" alt=""></center><br><br><br>当然还上了很多玄学课，你懂我也懂，我们做的表情包也是让人哭笑不得<br><center><img src="http://res.cloudinary.com/shi1996/image/upload/v1518684925/-97d4e3b0c0f457b_1_1_1_ws59no.jpg" alt=""></center><br><center><img src="http://res.cloudinary.com/shi1996/image/upload/v1518684926/-97d4e3b0c0f457b_1_lirsnh.jpg" alt=""></center><br><br><br>这一年并非一帆风顺，除了那些被学渣吐槽的玄学，还有我们被拘束的视野，我们在百忙之中抽出时间去做这件事，终于重新与世界连通时的喜悦是这样的：<br><center><img src="http://res.cloudinary.com/shi1996/image/upload/v1518685149/00_k0ldzf.png" alt=""></center><br><br><br>时间真的过得快，紧紧张张向前行，谈笑风生又一年。<br>你永远不知下一次被灌醉是哪种方式<br><center><img src="http://res.cloudinary.com/shi1996/image/upload/v1518685382/mmexport1518682339349_dwzgfq.jpg" alt=""></center><br>也不知那几爷子是举的什么东西和你碰杯 /笑哭<br><center><img src="http://res.cloudinary.com/shi1996/image/upload/v1518685402/IMG_20171017_205913_bnxo0s.jpg" alt=""></center><br><br><br>有过了一年，寝室从原来的7人变到了4人，再到了5人，我们紧跟时代的步伐<center><img src="http://res.cloudinary.com/shi1996/image/upload/v1518686178/mmexport1518685960856_dye4dy.jpg" alt=""></center><br>也不忘记搞笑和滑稽<br><center><img src="http://res.cloudinary.com/shi1996/image/upload/v1518686186/%E5%AF%9D%E5%AE%A4_zs6azi.png" alt=""></center><br>一起煮饭吃的感觉也是不能更棒，405还是那么欢乐，那么好～<br><center><img src="http://res.cloudinary.com/shi1996/image/upload/v1518686228/IMG_20170908_182643_fv8fir.jpg" alt=""></center><br><br><br>我们今年经常说的词语有：<strong>载客漂移</strong>，尽管我们的山地车都没有后座，但依然不减这词所带来的欢乐，我们就连骑车都是这么有趣。<br><center><img src="http://res.cloudinary.com/shi1996/image/upload/v1518686692/%E8%BD%BD%E5%AE%A2%E6%BC%82%E7%A7%BB_mnp0jk.png" alt=""></center><br>骑了4000多公里还没保养过的自行车车，拉紧刹车的时候只是有点烧胎，一样有活力<br><center><img src="http://res.cloudinary.com/shi1996/image/upload/v1518686993/IMG_20171210_115647_wbwtab.jpg" alt=""></center><br>感觉要成老司机的我们，唯一一次胆战心惊，可能就是”酒”驾吧，不知这啤酒载在车上会不会被查<br><center><img src="http://res.cloudinary.com/shi1996/image/upload/v1518686785/mmexport1518685880207_xliajx.jpg" alt=""></center><br>我们骑车放音乐，我才不怕被认成”街娃儿”，有长这么帅的？（开玩笑别当真嘿嘿嘿）<br><center><img src="http://res.cloudinary.com/shi1996/image/upload/v1518687188/IMG_20170916_103051_ogh9ue.jpg" alt=""></center><br>几十公里的山路到了一个古镇，看见的猫也是很可爱<br><center><img src="http://res.cloudinary.com/shi1996/image/upload/v1518687398/%E6%9C%9B%E9%B1%BC%E7%8C%AB1_uz5sjl.jpg" alt=""></center><br>但这只猫却是这样拍摄的，哈哈<br><center><img src="http://res.cloudinary.com/shi1996/image/upload/v1518687400/%E6%9C%9B%E9%B1%BC%E7%8C%AB0_nvevdf.jpg" alt=""></center><br>我们骑了半天骑了100+公里的山路，来到了洪雅的雅女湖，这才第一次看过这么清澈的水，虽然很累，但眼前的景观真的值<br><center><img src="http://res.cloudinary.com/shi1996/image/upload/v1518690234/IMG_20170916_152225_erar2x.jpg" alt=""></center><br><center><img src="http://res.cloudinary.com/shi1996/image/upload/v1518690257/IMG_20170916_211335_fedyim.jpg" alt=""></center><br>当然也只有我们几个男生愿意去冒险骑这么远的山路了，有时候只是为了爽一把，去飙个山路。<br>其余有女生的时候我们都走得很近，不过也玩儿得很开心，骑车也会成为大学中不可磨灭的记忆<br><center><img src="http://res.cloudinary.com/shi1996/image/upload/v1518691049/%E5%A4%9A%E4%BA%BA%E9%AA%91%E8%BD%A6_q5ul0u.jpg" alt=""></center><br>当然不得不说的就是这哥子锁车真的是厉害了。。。<br><center><img src="http://res.cloudinary.com/shi1996/image/upload/v1518691224/%E9%94%81%E8%BD%A6_xberyp.jpg" alt=""></center><br><br><br><strong>当然除了这些疯狂的半天骑100+公里山路，还有就是半天暴走几十公里。。。。。。。山路</strong>   /笑哭<br>海拔2000m到4000m，这垂直高度2公里，我们走了30+公里，看到了异常美丽的日出和云海，这里是达瓦更扎，对面能望见四姑娘山，那天是2017年12月30日<br><center><img src="http://res.cloudinary.com/shi1996/image/upload/v1518697489/IMG_20171231_085338_HDR_lk25mp.jpg" alt=""></center><br><center><img src="http://res.cloudinary.com/shi1996/image/upload/v1518698597/%E4%BA%91%E6%B5%B7_brztex.jpg" alt=""></center><br>山路自己走，还背上几十斤的露营装备，还好我没有高原反应，还跑下去接了同伴<br><center><img src="http://res.cloudinary.com/shi1996/image/upload/v1518698180/%E5%B1%B1%E8%B7%AF_ikfcqr.jpg" alt=""></center><br>气压低得连面包都快爆炸了<br><center><img src="http://res.cloudinary.com/shi1996/image/upload/v1518698489/%E9%9D%A2%E5%8C%85_e5nudx.jpg" alt=""></center><br>云海可真美丽呀~<br><center><img src="http://res.cloudinary.com/shi1996/image/upload/v1518698662/IMG_20171231_082819_HDR_l1zbvx.jpg" alt=""></center><br>然而。。。鬼才知道我们昨晚是怎么度过的<br>烤火！！我的第一次通宵，一晚没睡，零下很多度的感觉，四川人重来没看到这么大的雪！一直怀疑自己是不是要被冻死了，我们的群名字也在后来改成了“达瓦更扎生死之交”<br><center><img src="http://res.cloudinary.com/shi1996/image/upload/v1518698763/IMG_20171231_030813_HDR_mhqfe9.jpg" alt=""></center><br>冷得简直睡不着，但清晨的日出还是真的美丽！上上图~<br><center><img src="http://res.cloudinary.com/shi1996/image/upload/v1518698877/IMG_20171231_071228_HDR_dkcnlm.jpg" alt=""></center><br><center><img src="http://res.cloudinary.com/shi1996/image/upload/v1518698886/IMG_20171231_072201_HHT_pyn5ua.jpg" alt=""></center><br><center><img src="http://res.cloudinary.com/shi1996/image/upload/v1518698890/IMG_20171231_072841_HHT_amhbp2.jpg" alt=""></center><br><center><img src="http://res.cloudinary.com/shi1996/image/upload/v1518698886/IMG_20171231_072201_HHT_pyn5ua.jpg" alt=""></center><br><center><img src="http://res.cloudinary.com/shi1996/image/upload/v1518698902/IMG_20171231_073334_HDR_ea0pmj.jpg" alt=""></center><br>当然最有意义的是，我在山上和几个生死之交的小伙伴一起，度过了我21岁的生日，那里没有信号，连电话也没有打一个回家，就在有一点点信号的时候给一位朋友传了一张照片~<br><br><br><strong>疯狂？激情？还有呢，就是生活中的那些</strong><br>天冷了，流浪狗在草丛中的样子让人怜悯<br><center><img src="http://res.cloudinary.com/shi1996/image/upload/v1518699805/IMG_20171120_163348_scgr5l.jpg" alt=""></center><br>因为我颞颌关节伤势的好转，今年我也是特别能吃，我在近4年里第一次长胖，还长了5斤多，不枉费我加餐吃了这么多嘻嘻~<br><center><img src="http://res.cloudinary.com/shi1996/image/upload/v1518700293/IMG_20171206_122057_vzrx8b.jpg" alt=""></center><br>当然还有回忆的童年而买的悠悠球，耍了几次就放弃了，实在是太难了<br><center><img src="http://res.cloudinary.com/shi1996/image/upload/v1518700543/%E6%82%A0%E6%82%A0%E7%90%83_jvsp1y.jpg" alt=""></center><br>我和老崔都不想喝酒多吃东西，于是乎我们的酒杯就只有这么大<br><center><img src="http://res.cloudinary.com/shi1996/image/upload/v1518700661/%E9%85%92_uolvdj.jpg" alt=""></center><br>因为右手有很重的伤，我也不知多久能好，于是便改用了左手打羽毛球，每周六都坚持去体育馆，一个人成长，现在左手也是相当灵活<br><center><img src="http://res.cloudinary.com/shi1996/image/upload/v1518700844/Screenshot_2018-02-15-17-10-19-946_com.tencent.mm_hyz2ai.png" alt=""></center><br><strong>其实平时收集这些记忆很少，有太多太多的事都不能用一些工具来表达，但有时候，他们的话，却真的真的触动着我</strong><br>洲洋是我高中时期最最最好的伙伴，给了我很多帮助。希望我们的友谊永恒<br><center><img src="http://res.cloudinary.com/shi1996/image/upload/v1518701494/IMG_20180215_212232_u7h6iw.png" alt=""></center><br>磊哥给我说“做自己喜欢的事！”，我一定会的，未来加油！我会一直想着自己喜欢的方向前进<br><center><img src="http://res.cloudinary.com/shi1996/image/upload/v1518701536/IMG_20180215_212314_ybe68o.png" alt=""></center>


<p><strong>或许还真的没有更多的图了，但以前每一刻的记忆却依然存在</strong></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;现在总给我一种感觉，时间越走越快，还没来得及封装成记忆，它又带来了全新的一年。。。&lt;br&gt;
    
    </summary>
    
      <category term="Others" scheme="http://shic.top/categories/Others/"/>
    
    
      <category term="Others" scheme="http://shic.top/tags/Others/"/>
    
  </entry>
  
  <entry>
    <title>机器学习识别方圆(1)</title>
    <link href="http://shic.top/2018/02/06/ML_csv_pretreatment_data/"/>
    <id>http://shic.top/2018/02/06/ML_csv_pretreatment_data/</id>
    <published>2018-02-05T16:00:10.000Z</published>
    <updated>2018-02-20T14:52:02.267Z</updated>
    
    <content type="html"><![CDATA[<h2 id="想从这个很简单的二分类问题实践机器学习吗？"><a href="#想从这个很简单的二分类问题实践机器学习吗？" class="headerlink" title="想从这个很简单的二分类问题实践机器学习吗？"></a>想从这个很简单的二分类问题实践机器学习吗？</h2><p><center><img src="http://res.cloudinary.com/shi1996/image/upload/v1517904003/fang_yuan_qx0ukp.jpg" alt=""></center><br><a id="more"></a></p>
<h2 id="数据预处理"><a href="#数据预处理" class="headerlink" title="数据预处理"></a>数据预处理</h2><h3 id="序"><a href="#序" class="headerlink" title="序"></a>序</h3><p>可能绝大多数机器学习的入门者都用过MNIST数据集，然后第二步自己做实践的时候就卡住了，这一步中往往时相当费时间的，也是学习过程中一个困难的地方。这次博主将分享一个用机器学习来分辨图片的简单例子，带你走进实践，有利于对其工作原理的理解，便于后续的学习和研究。如果你还没有了解什么时机器学习，或者一些常用的算法，那本教程不适合。</p>
<h3 id="获取数据集"><a href="#获取数据集" class="headerlink" title="获取数据集"></a>获取数据集</h3><p>点击<a href="https://pan.baidu.com/s/1kWpzaS3" target="_blank" rel="external">下载数据集</a> 密码: vr76，<strong>请勿用作商业用途，数据集仅做学习交流</strong></p>
<h3 id="数据预查看"><a href="#数据预查看" class="headerlink" title="数据预查看"></a>数据预查看</h3><p>使用matplotlib查看数据的图片形式</p>
<ul>
<li>本次训练我们将用到一组方圆的数据集，每一单位的数据就是一个包含大量噪点的图形，图片表示方形或者圆形，如图所示：<img src="http://res.cloudinary.com/shi1996/image/upload/v1517887539/img_of_data_t4vx8s.jpg" alt=""> </li>
<li>其中用0表示圆，1表示方形。</li>
</ul>
<h3 id="数据集分析"><a href="#数据集分析" class="headerlink" title="数据集分析"></a>数据集分析</h3><p>下载数据集并解压后会得到三个csv格式的文件，这是能用Microsoft Excel打开的文件，打开发现数据并不是我们马上能够用于机器学习的数据，我们需要进行分析和预处理。</p>
<ul>
<li>该数据集包含：训练集中4000个灰度图像，预测集3550个灰度图像，其中还包含了大量的图像噪点。图像分辨率为40*40。以行向量的形式存放在csv文件里</li>
<li>打开train.csv，第一行第一个就是id，从上往下0～3999，表示一共4000个数据。id后面一个是p_0_0,一直往右是到p_39_39，一共40*40个数据，每一行中的这1600个数据。分别代表图像(40,40)矩阵中相应位置上的像素点的灰度值。每一行最后一个标签为y，值0或者1，代表该行向量的数据表示的是圆形还是方形。数据集如下所示：<img src="http://res.cloudinary.com/shi1996/image/upload/v1517894328/train_dataSet_cwxs3c.jpg" alt=""></li>
</ul>
<h3 id="预处理、准备数据"><a href="#预处理、准备数据" class="headerlink" title="预处理、准备数据"></a>预处理、准备数据</h3><p>通过对数据的分析，我们发现这些数据并不是我们能够马上拿来给神经网络来学习的数据，我们需要对数据进行一些预处理以保证我们的神经网络能够真正从数据中学习到参数，把没有用的字段删除，对某些字段进行编码等等。并划分好训练集和验证集。注：请注意数据集文件的位置，此处是和代码文件在一个文件夹中。</p>
<h4 id="去掉id字段"><a href="#去掉id字段" class="headerlink" title="去掉id字段"></a>去掉id字段</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">import pandas as pd</div><div class="line"># 准备数据</div><div class="line">data_set = pd.read_csv(&apos;train.csv&apos;).iloc[:,1:]</div></pre></td></tr></table></figure>
<h4 id="one-hot-热编码labels"><a href="#one-hot-热编码labels" class="headerlink" title="one_hot 热编码labels"></a>one_hot 热编码labels</h4><p>我们可以发现数据集里的y标签，用0表示的圆，用1表示的方，但是方圆却不是像0和1这样有数值之间的距离感。我们的目的是训练一个神经网络能够对图像进行分类处理，所以我们还需要对数据进行一次写处理，这里所采用的是onehot形式</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">def to_onehot(y):</div><div class="line">	&quot;&quot;&quot; </div><div class="line">		这是我自己定义的一个转化形式，当然还有其他的方法</div><div class="line">		这点效率略微低</div><div class="line">	&quot;&quot;&quot;</div><div class="line">    for i in range(len(y)):</div><div class="line">        if y.iloc[i,1600]==0:</div><div class="line">            y.iloc[i,1600] = &apos;y&apos;</div><div class="line">        else:</div><div class="line">            y.iloc[i,1600] = &apos;f&apos;</div><div class="line">    return pd.get_dummies(y)</div><div class="line"></div><div class="line">data_set = to_onehot(data_set)</div></pre></td></tr></table></figure>
<h4 id="打乱数据顺序"><a href="#打乱数据顺序" class="headerlink" title="打乱数据顺序"></a>打乱数据顺序</h4><p>我们通过对数据集的分析可以看出，这些数据都还是相当有规律的，差不多很小的一批数据里，方圆的比例都是各占一半。我们先打乱一下数据的顺序，有利于神经网络的学习。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># 之后会用到tensorflow.float32格式的数据，这里转化成np.float32</div><div class="line">data_set = data_set.values.astype(np.float32)</div><div class="line">np.random.shuffle(data_set)</div></pre></td></tr></table></figure></p>
<h4 id="划分训练集和验证集"><a href="#划分训练集和验证集" class="headerlink" title="划分训练集和验证集"></a>划分训练集和验证集</h4><p>test.csv文件中没有正确的y标签，仅仅能用作做模型的衡量，这是一组没有正确答案的数据，我们只有划分train .csv来得到我们的训练集和验证集<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sep = int(0.7*len(data_set))</div><div class="line">train_data = data_set[:sep]</div><div class="line">test_data = data_set[sep:]</div></pre></td></tr></table></figure></p>
<h3 id="验证数据集"><a href="#验证数据集" class="headerlink" title="验证数据集"></a>验证数据集</h3><ul>
<li>可以通过多次打印得到的矩阵的维度来进行切割正确性判断，或随机打印几个数据对照真实数据，检验自己的数据预处理是否正确。</li>
<li>如果对这里的行向量理解不是很深刻，不相信这能表示图片信息的话，还可以随便找一行输出来看看是什么，图片如上面所示</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">import matplotlib.pyplot as plt</div><div class="line"># 这里输出第996个图像观察一下</div><div class="line">plt.imshow(train_data.iloc[995].reshape(40,40), cmap=&apos;gray&apos;)</div><div class="line">plt.title(&apos;%i&apos; % train_labels.iloc[995,0]); plt.show()</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;想从这个很简单的二分类问题实践机器学习吗？&quot;&gt;&lt;a href=&quot;#想从这个很简单的二分类问题实践机器学习吗？&quot; class=&quot;headerlink&quot; title=&quot;想从这个很简单的二分类问题实践机器学习吗？&quot;&gt;&lt;/a&gt;想从这个很简单的二分类问题实践机器学习吗？&lt;/h2&gt;&lt;p&gt;&lt;center&gt;&lt;img src=&quot;http://res.cloudinary.com/shi1996/image/upload/v1517904003/fang_yuan_qx0ukp.jpg&quot; alt=&quot;&quot;&gt;&lt;/center&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Machine Learning" scheme="http://shic.top/categories/Machine-Learning/"/>
    
      <category term="TensorFlow" scheme="http://shic.top/categories/Machine-Learning/TensorFlow/"/>
    
    
      <category term="Machine Learning" scheme="http://shic.top/tags/Machine-Learning/"/>
    
      <category term="TensorFlow" scheme="http://shic.top/tags/TensorFlow/"/>
    
  </entry>
  
  <entry>
    <title>机器学习识别方圆(2)</title>
    <link href="http://shic.top/2018/02/06/ML_csv_build_model/"/>
    <id>http://shic.top/2018/02/06/ML_csv_build_model/</id>
    <published>2018-02-05T16:00:09.000Z</published>
    <updated>2018-02-20T15:17:34.205Z</updated>
    
    <content type="html"><![CDATA[<h2 id="搭建模型-CNN"><a href="#搭建模型-CNN" class="headerlink" title="搭建模型-CNN"></a>搭建模型-CNN</h2><p>本次先用CNN来搭建神经网络，实现图像的识别</p>
<p><center><img src="http://res.cloudinary.com/shi1996/image/upload/v1517897894/cnn_h1tuhm.jpg" alt=""></center><br><a id="more"></a><br><br></p>
<h3 id="参数、超参数"><a href="#参数、超参数" class="headerlink" title="参数、超参数"></a>参数、超参数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">batch_size = 50  # 一批取50个数据</div><div class="line">lr = 0.5         # learning rate</div></pre></td></tr></table></figure>
<h3 id="创建模型"><a href="#创建模型" class="headerlink" title="创建模型"></a>创建模型</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line">import tensorflow as tf</div><div class="line"></div><div class="line"># 创建模型</div><div class="line">tf_input = tf.placeholder(tf.float32,[None,1602])</div><div class="line">tf_x = tf_input[:,:1600]</div><div class="line">x_img = tf.reshape(tf_x,[-1,40,40,1])</div><div class="line">tf_y = tf_input[:,1600:]            # onehot</div><div class="line"></div><div class="line">## CNN</div><div class="line">conv1 = tf.layers.conv2d(           # shape:(40,40,1)</div><div class="line">        inputs = x_img,</div><div class="line">        filters = 10,               # 图像卷积后的深度</div><div class="line">        kernel_size = 5,            # 扫描核5*5大小</div><div class="line">        padding = &apos;same&apos;,</div><div class="line">        activity_regularizer = tf.nn.relu</div><div class="line">)                                   # shape:(40,40,10)</div><div class="line">pool1 = tf.layers.max_pooling2d(</div><div class="line">        inputs = conv1,</div><div class="line">        pool_size = [2,2],</div><div class="line">        strides = 2</div><div class="line">)                                   # shape:(20,20,10)</div><div class="line">conv2 = tf.layers.conv2d(</div><div class="line">        inputs = pool1,</div><div class="line">        filters = 20,</div><div class="line">        kernel_size = 5,</div><div class="line">        padding = &apos;same&apos;,</div><div class="line">        activity_regularizer = tf.nn.relu</div><div class="line">)                                   # shape:(20,20,20)</div><div class="line">pool2 = tf.layers.max_pooling2d(</div><div class="line">        inputs = conv2,</div><div class="line">        pool_size = [2,2],</div><div class="line">        strides = 2</div><div class="line">)                                   # shape:(10,10,20)</div><div class="line"></div><div class="line">shape = pool2.get_shape().as_list() # (ง •_•)ง</div><div class="line">flat_data = tf.reshape(pool2,[-1,shape[1]*shape[2]*shape[3]])</div><div class="line">output = tf.layers.dense(flat_data,2) #用于全连接层，二分类0或者1。</div></pre></td></tr></table></figure>
<h3 id="定义损失函数"><a href="#定义损失函数" class="headerlink" title="定义损失函数"></a>定义损失函数</h3><p>此处我们选择的是交叉熵损失函数，需要注意的是这里的tf_yone_hot形式的，来自数据集的y，output就是模型的预测值<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">loss = tf.losses.softmax_cross_entropy(</div><div class="line">	onehot_labels = tf_y,</div><div class="line">	logits = output</div><div class="line">)</div></pre></td></tr></table></figure></p>
<h3 id="选择优化方法训练"><a href="#选择优化方法训练" class="headerlink" title="选择优化方法训练"></a>选择优化方法训练</h3><p>此处我们选择的是AdamOptimizer，当然也可以尝试其他优化器。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">train_op = tf.train.AdamOptimizer(lr).minimize(loss)</div></pre></td></tr></table></figure></p>
<h3 id="计算模型精度"><a href="#计算模型精度" class="headerlink" title="计算模型精度"></a>计算模型精度</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"># 用于测试该模型的识别精确度</div><div class="line">accuracy = tf.metrics.accuracy(</div><div class="line">        labels = tf.argmax(tf_y,axis = 1),</div><div class="line">        predictions = tf.argmax(output,axis = 1)</div><div class="line">)[1]</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;搭建模型-CNN&quot;&gt;&lt;a href=&quot;#搭建模型-CNN&quot; class=&quot;headerlink&quot; title=&quot;搭建模型-CNN&quot;&gt;&lt;/a&gt;搭建模型-CNN&lt;/h2&gt;&lt;p&gt;本次先用CNN来搭建神经网络，实现图像的识别&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;img src=&quot;http://res.cloudinary.com/shi1996/image/upload/v1517897894/cnn_h1tuhm.jpg&quot; alt=&quot;&quot;&gt;&lt;/center&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Machine Learning" scheme="http://shic.top/categories/Machine-Learning/"/>
    
      <category term="TensorFlow" scheme="http://shic.top/categories/Machine-Learning/TensorFlow/"/>
    
    
      <category term="Machine Learning" scheme="http://shic.top/tags/Machine-Learning/"/>
    
      <category term="TensorFlow" scheme="http://shic.top/tags/TensorFlow/"/>
    
  </entry>
  
  <entry>
    <title>机器学习识别方圆(3)</title>
    <link href="http://shic.top/2018/02/06/ML_csv_Run/"/>
    <id>http://shic.top/2018/02/06/ML_csv_Run/</id>
    <published>2018-02-05T16:00:08.000Z</published>
    <updated>2018-02-20T15:16:33.111Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Run-Your-Neural-Network"><a href="#Run-Your-Neural-Network" class="headerlink" title="Run Your Neural Network"></a>Run Your Neural Network</h2><p><center><img src="http://res.cloudinary.com/shi1996/image/upload/v1517903727/neural-net-head_pf5ixb.jpg" alt=""></center><br><a id="more"></a></p>
<h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><p><strong>这一步是相当重要的</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">sess = tf.Session()</div><div class="line"># 初始化全局和本地变量</div><div class="line">init_op = tf.group(</div><div class="line">        tf.global_variables_initializer(), </div><div class="line">        tf.local_variables_initializer())</div><div class="line">sess.run(init_op)</div></pre></td></tr></table></figure></p>
<h3 id="训练并实时检验"><a href="#训练并实时检验" class="headerlink" title="训练并实时检验"></a>训练并实时检验</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"># 训练</div><div class="line">for step in range(1201):</div><div class="line">    batch_index = np.random.randint(len(train_data), size = batch_size)</div><div class="line">    sess.run(train_op,&#123;tf_input:train_data[batch_index]&#125;)</div><div class="line">    if step % 50 ==0:</div><div class="line">        acc_, loss_ = sess.run([accuracy, loss], &#123;tf_input: test_data&#125;)</div><div class="line">        print(&quot;Step: %i&quot; % step, &quot;| Accurate: %.8f&quot; % acc_, &quot;| Loss: %.2f&quot; % loss_ )</div><div class="line">	</div><div class="line">    # 检验一下是否输出正常</div><div class="line">    if step == 1200:</div><div class="line">        predictions_2 = tf.argmax(output,axis = 1)</div><div class="line">        test_data_ = test_data[:50]</div><div class="line">        acc_,predictions_2_ ,output_= sess.run([accuracy,predictions_2,output], feed_dict = &#123;tf_input: test_data_&#125;)</div><div class="line">        print(&apos;predictions_2:&apos;, predictions_2_,&apos;output:&apos;,output_)</div><div class="line">        print(&apos;accuracy:&apos;,acc_)</div></pre></td></tr></table></figure>
<p>在经过很短的训练后，还是能达到约99%的精确度（step = 1200，accuracy = 92.5%，图像噪点较多）</p>
<h3 id="优化及总结"><a href="#优化及总结" class="headerlink" title="优化及总结"></a>优化及总结</h3><ul>
<li><p>我们首先用的是0.05的学习率进行学习，在达到98%的时候就比较难上到99%，当然经过更多的训练还是可以。那么此处就可以更改一下learning rate，换一个更小的值来试试。</p>
</li>
<li><p>当然我们也可以把代码迁移到GPU版的Tensorflow上。这里我训练的时候我的GTX950M出现了爆显存的错误。。当然应该可以通过优化模型，更改每一批的数据来解决。暂时我还没做这一块。<strong>但需要注意的是，目前Tenssorflow的CPU版和GPU版是不能同时安装的</strong>，之后有时间再分享一期有关于这方面的优化加速方法吧。</p>
</li>
<li><p>如果是没有GPU，也可以通过源代码安装Tensorflow获取对于AVX，AVX2指令集的支持。当然关于这一条我实验了好几天。因为博主的电脑是Windows 10操作系统的，也没有安装Linux，所以官方就不支持源代码安装到Windows机器上。如果你也用的是Windows电脑，这里给出花了好几天来实验得到经验和信息：</p>
<ul>
<li>Tensorflow官方不支持源代码安装到WIndows，所以只有自己操作，需要用到cmake，swigwin，visual studio三个工具，其中vs2015只能编译出支持AVX指令集的wheel文件，<strong>vs2017才能编译出支持AVX和AVX2的</strong></li>
<li>编译时只支持Python3.5-amd64，不支持Python3.6，用3.6的python会编译出错，最终无法得到wheel文件</li>
<li>编译时会从git下载一些数据文件，网速非常非常的慢，我挂了六小时才下载完，一直停在下载没有变是正常现象。建议启用VPN全局代理（ssr需要选择代理规则为全局代理，再选PAC才行）</li>
</ul>
</li>
</ul>
<ul>
<li>我们也可以用到一些迁移学习的思想，我们可以先对模型用一个较大的learning rate进行学习，然后到一定程度后就把学习到的神经网络的参数保存下来，下一次换一个小点的learning rate，把保存的参数读取处理。在此基础上再进行学习。关于这一点，博主之后有时间的话也会写一个帖子分享一下。</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Run-Your-Neural-Network&quot;&gt;&lt;a href=&quot;#Run-Your-Neural-Network&quot; class=&quot;headerlink&quot; title=&quot;Run Your Neural Network&quot;&gt;&lt;/a&gt;Run Your Neural Network&lt;/h2&gt;&lt;p&gt;&lt;center&gt;&lt;img src=&quot;http://res.cloudinary.com/shi1996/image/upload/v1517903727/neural-net-head_pf5ixb.jpg&quot; alt=&quot;&quot;&gt;&lt;/center&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Machine Learning" scheme="http://shic.top/categories/Machine-Learning/"/>
    
      <category term="TensorFlow" scheme="http://shic.top/categories/Machine-Learning/TensorFlow/"/>
    
    
      <category term="Machine Learning" scheme="http://shic.top/tags/Machine-Learning/"/>
    
      <category term="TensorFlow" scheme="http://shic.top/tags/TensorFlow/"/>
    
  </entry>
  
  <entry>
    <title>随笔：入门所遇到的坑</title>
    <link href="http://shic.top/2017/12/23/%E9%9A%8F%E7%AC%94%EF%BC%9A%E5%85%A5%E9%97%A8%E6%89%80%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/"/>
    <id>http://shic.top/2017/12/23/随笔：入门所遇到的坑/</id>
    <published>2017-12-22T16:00:04.000Z</published>
    <updated>2018-02-06T13:54:46.624Z</updated>
    
    <content type="html"><![CDATA[<h2 id="真的是随笔，不信算了"><a href="#真的是随笔，不信算了" class="headerlink" title="真的是随笔，不信算了"></a><center>真的是随笔，不信算了</center></h2><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><ul>
<li>Windows 10 64Bit 1709Pro</li>
<li>TensorFlow1.4.0</li>
<li>Python 3.6.3</li>
<li></li>
<li></li>
<li><a id="more"></a>
</li>
</ul>
<ol>
<li><p>Jupyter安装出问题，不能打开jupyter notebook<br>答：安装提示是找不到markupsafe模块，但是pip list一查看，的确是安装了的，有说法是在Windows终端上的cmd编码有问题，于是就可以换一个终端来使用，比如说在git bash里，卸载markupsafe并重新安装，然后就能顺利打开，运行jupyter notebook浏览器就会自动打开。</p>
<center><img src="https://res.cloudinary.com/shi1996/image/upload/v1510803291/gitbash_r04neu.png" alt="gitbash"></center><br><center><img src="http://res.cloudinary.com/shi1996/image/upload/v1510803295/jupyter_ibqqjg.png" alt="jupyter"></center><br>但大家会发现这进入的是当前用户的一个文件夹，推荐是在python的模块文件夹下，右键点击git bash here，就能用jupyter打开该文件夹了<br><center><img src="http://res.cloudinary.com/shi1996/image/upload/v1510803930/gitbashhere_zebgzz.png" alt="gitbashhere"></center>
</li>
<li><p><a href="https://www.tensorflow.org/install/migration" target="_blank" rel="external">过度到Tensorflow 1.0版本</a>,有些教程用的版本比较低，新版的API与旧版的差别看这</p>
</li>
<li></li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;真的是随笔，不信算了&quot;&gt;&lt;a href=&quot;#真的是随笔，不信算了&quot; class=&quot;headerlink&quot; title=&quot;真的是随笔，不信算了&quot;&gt;&lt;/a&gt;&lt;center&gt;真的是随笔，不信算了&lt;/center&gt;&lt;/h2&gt;&lt;h2 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;headerlink&quot; title=&quot;环境&quot;&gt;&lt;/a&gt;环境&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Windows 10 64Bit 1709Pro&lt;/li&gt;
&lt;li&gt;TensorFlow1.4.0&lt;/li&gt;
&lt;li&gt;Python 3.6.3&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;li&gt;
    
    </summary>
    
      <category term="TensorFlow" scheme="http://shic.top/categories/TensorFlow/"/>
    
    
      <category term="TensorFlow" scheme="http://shic.top/tags/TensorFlow/"/>
    
  </entry>
  
  <entry>
    <title>在Ubuntu里使用Python</title>
    <link href="http://shic.top/2017/12/23/Ubuntu_python/"/>
    <id>http://shic.top/2017/12/23/Ubuntu_python/</id>
    <published>2017-12-22T16:00:03.000Z</published>
    <updated>2017-12-28T02:26:31.137Z</updated>
    
    <content type="html"><![CDATA[<p>大家应该都听说过，现在很多Linux系统都自带有Python，Ubuntu也不例外，但是因为版本原因，我们该如何正确使用它呢<br><a id="more"></a></p>
<h3 id="检查Python"><a href="#检查Python" class="headerlink" title="检查Python"></a>检查Python</h3><ul>
<li>首先我们检查一下Python才发现，原来只是自带了Python2.7，但是这时如果再输入一下<strong>Python3</strong>的话，就会发现其实Python3也是安装了的，而且Ubuntu17.10还是自带的Python3.6.2版本的。<img src="http://res.cloudinary.com/shi1996/image/upload/v1514102549/check_python_LI_as7vbg.jpg" alt=""> 但是大家会发现pypi都没有安装。其实想想也是有道理的，这样用户就可以根据自己的需求来决定到底用哪一个版本的Python了。</li>
</ul>
<h3 id="安装Pypi和其他常用包"><a href="#安装Pypi和其他常用包" class="headerlink" title="安装Pypi和其他常用包"></a>安装Pypi和其他常用包</h3><p>以Python3.6.2为例<br><br></p>
<ol>
<li>当需要安装Python3的其他模块的时候，就会用到pip3，那么我们就   为系统安装它，输入以下命令：<br><code>sudo apt-get install python3-pip</code><br>输入y，点击回车，等待下载完成</li>
<li>安装Python的其他包就可以像在Windows中一样进行操作了。当然我们Windows通常就只安装一个版本的Python，所以我们可能会直接这样用：<br><code>pip install package_name</code><br>但是需要注意的是，这时候就会报错了，很神奇？其实这也是必然，毕竟直接输入pip install是在用Python2.7，要是想要Python3的话就得输入<strong>pip3 install</strong>，   <img src="http://res.cloudinary.com/shi1996/image/upload/v1514102538/install_pip3_podqa7.png" alt="">   这样也不会因为有两个不兼容版本的Python而不知道自己安装的模块到底属于哪一个的问题了。例如下图所示：   <img src="http://res.cloudinary.com/shi1996/image/upload/v1514102541/install_numpy_k4sxvd.png" alt=""></li>
<li><p><strong>这里提醒一点想安装Jupyter的伙伴们</strong>，这里有一个几个坑需要注意以下，我也是查了很久才知道怎么操作的，于是在这里总结以下。和Windows里的不一样，需要用到：<br><code>pip3 install jupyter-notebook</code></p>
<ul>
<li>有些电脑可能安装不上，那就检查以下jupyter，系统提示需要用到<strong>sudo apt</strong>来安装，于是跟着提示进行操作  <img src="http://res.cloudinary.com/shi1996/image/upload/v1514102537/jupyter0_vtta1y.png" alt=""></li>
<li>然后在输入jupyter发现是安装了，和Windows里的一样显示，但是输入jupyter notebook发现还是不行。  <img src="http://res.cloudinary.com/shi1996/image/upload/v1514102534/jupyter1_xncv8c.png" alt="">  </li>
<li>这个时候，再在Terminal里面输入下面的命令就行了<br><code>pip3 install jupyter-notebook</code></li>
</ul>
<p>最后在看一下大功告成的样子，完美~  <img src="http://res.cloudinary.com/shi1996/image/upload/c_scale,w_1999/v1514037548/IMG_20171222_203340_zvk3rm.jpg" alt=""></p>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;大家应该都听说过，现在很多Linux系统都自带有Python，Ubuntu也不例外，但是因为版本原因，我们该如何正确使用它呢&lt;br&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://shic.top/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://shic.top/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu安装本地软件</title>
    <link href="http://shic.top/2017/12/23/Ubuntu_install_app/"/>
    <id>http://shic.top/2017/12/23/Ubuntu_install_app/</id>
    <published>2017-12-22T16:00:02.000Z</published>
    <updated>2017-12-25T14:33:48.563Z</updated>
    
    <content type="html"><![CDATA[<p>安装一个软件都能报出依赖缺失的错，是不是觉得简直了。。。<br>感觉又何Java开发类似了，不停地找啥以来直到用上spring<br><a id="more"></a><br>我们一安装网易云音乐和搜狗拼音为例来进行操作，之后的软件安装都可以类似操作。</p>
<h3 id="安装网易云音乐"><a href="#安装网易云音乐" class="headerlink" title="安装网易云音乐"></a>安装网易云音乐</h3><ol>
<li>先从网上下载安装包到本地，然后在下载的文件夹中打开Terminal（右键-打开终端）,输入以下安装本地软件的命令（中括号中请替换成相应软件的名字，包括格式，例如:abc123.deb）<br><code>sudo dpkg -i [your app&#39;s name]</code><br>如下图所示，输入密码后可能会出现很多依赖缺失的情况  <img src="http://res.cloudinary.com/shi1996/image/upload/v1514083063/163_0_mlrvmy.png" alt="0"> 那么我们就可以根据提示去做，它说未安装的软件包，我们就去安装就行了。</li>
<li>当我们输入安装软件包的指令后，他会去我们设定好的软件源去下载：<br><code>sudo apt-get install gconf-service</code><br>会发现依然有很多毛病不能正常安装，它又说没有gconf-service-backend，那是不是又要去安装它呢，万一又缺啥是不是就进入死循环了呢？  <img src="http://res.cloudinary.com/shi1996/image/upload/v1514083049/163_1_tdvl9v.png" alt="1">  哈哈，先不急着往下安装，<strong>每一次报错都要仔细看一下提示信息嘛，一般都很有用的</strong></li>
<li>提示说有未能满足的依赖关系。请尝试不指明软件包的名字来运行apt     –fix-broken install然后给出了一行命令，那么我们就输入它试试                    看：<br><code>apt --fix-broken install</code></li>
<li>输入之后你会发现它提示权限不够，然而我们在安装系统的时候所设置        的用户就是超级用户了，也就是管理员了。然而很多同学可能就会。想到Windows下有提升用户权限的操作，于是就去搜Ubuntu提升用户。权限的操 作，结果又没有搜到于是就一直卡在这里。 <img src="http://res.cloudinary.com/shi1996/image/upload/v1514083057/163_2_hnxtwo.png" alt="2"><br>其实要是懂一点Linux的基本命令就会知道，而且我们之前安装软件都输入了<strong>sudo</strong>的字符，sudo是linux系统管理指令，是允许系统管理员让普通用户执行一些或者全部的root命令的一个工具。简单理解可以是super user do。那么我们尝试一下下面的命令：<br><code>sudo apt --fix-broken install</code></li>
<li>输入之后你将看到一下的界面  <img src="http://res.cloudinary.com/shi1996/image/upload/v1514083070/163_3_s7yjdj.png" alt="3">  输入y点击回车就行了，要是你不放心呢，就去输入命令检查一下，结果也是发现以前缺少的依赖都在了  <img src="http://res.cloudinary.com/shi1996/image/upload/v1514083065/163_4_yw7xgw.png" alt="4">  那么你就可以在该软件安装包所在的文件夹里打开Terminal，使用一下命令安装你的软件了：<br><code>sudo dpkg -i [your app&#39;s name]</code><br><br></li>
</ol>
<h3 id="安装搜狗拼音"><a href="#安装搜狗拼音" class="headerlink" title="安装搜狗拼音"></a>安装搜狗拼音</h3><p>讲真，自带的中文输入法还真的不好用，于是我们换成了对中文输入更加友好的搜狗拼音。</p>
<ol>
<li>和之前的安装步骤一样，遇到问题一样的操作，你自己操作一遍就会熟练了。 <img src="http://res.cloudinary.com/shi1996/image/upload/v1514083059/pinyin0_ifoxwf.png" alt="5">  <img src="http://res.cloudinary.com/shi1996/image/upload/v1514083053/pinyin1_rbuxxa.png" alt="5"></li>
<li>安装好之后就如图进行设置 <img src="http://res.cloudinary.com/shi1996/image/upload/v1514083059/pinyin3_ws8bsm.png" alt="6"> 选择键盘输入法系统为fcitx，有些电脑可能会出现下面图中定位情况，选择是或者安装就行了 <img src="http://res.cloudinary.com/shi1996/image/upload/v1514083066/pinyin2_l4utx6.png" alt="7"></li>
<li>最后我们检验一下，发现能用就大功告成啦  <img src="http://res.cloudinary.com/shi1996/image/upload/c_limit,w_1182/v1514037552/IMG_20171222_222709_kyupuh.jpg" alt="8"></li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;安装一个软件都能报出依赖缺失的错，是不是觉得简直了。。。&lt;br&gt;感觉又何Java开发类似了，不停地找啥以来直到用上spring&lt;br&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://shic.top/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://shic.top/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu更改软件源</title>
    <link href="http://shic.top/2017/12/23/U_select_appSource/"/>
    <id>http://shic.top/2017/12/23/U_select_appSource/</id>
    <published>2017-12-22T16:00:01.000Z</published>
    <updated>2017-12-27T12:55:10.604Z</updated>
    
    <content type="html"><![CDATA[<p>想用Linux系统而因为安装软件一直出错而放弃使用的同学，举个手。。。<br>那么我们现在就来解决软件安装的问题<br><a id="more"></a></p>
<h3 id="改软件源并更新系统"><a href="#改软件源并更新系统" class="headerlink" title="改软件源并更新系统"></a>改软件源并更新系统</h3><p>很多时候我们都是因为下载软件老是很慢或者根本就下载不了，就直接导致你的系统缺少可用工具而放弃了使用，所以第一步就是要解决软件下载和安装的问题。<br>那么首先就得改一下软件源，搞Java开发且用过Maven的同学多半也改过它的中央长裤仓库地址吧，这里是一个道理，选择一个好的下载点</p>
<ol>
<li>如图点击进行操作  <img src="http://res.cloudinary.com/shi1996/image/upload/v1514379127/snipaste_20171224_094711_inpvpq.jpg" alt="0"> 点击下载自这里的框，选择其他站点。</li>
<li>然后你就会看到如下图所示的界面，选择阿里或者搜狐的就行，也可以让他自己测试一下自己选择最优   <img src="http://res.cloudinary.com/shi1996/image/upload/v1514379191/select_server_jgiyou.png" alt="1"></li>
<li>操作完成之后，你就可以去更新自己的软件了，点击第一张图所示的软件更新器，更新一下自己的本地软件，避免之后进行某些操作的时候因软件版本过低而无法运行。  <img src="http://res.cloudinary.com/shi1996/image/upload/v1514379193/update1_hpgyqt.png" alt="2">  <img src="http://res.cloudinary.com/shi1996/image/upload/v1514379192/update2_bs1kxw.png" alt="3"></li>
<li>等待下载完成之后，重启一下就行啦</li>
<li>这时你再去软件商店看一下，就会发现多了很多软件了，不像之前的就几个。下载一下常用的软件就可以从这里下载。当然也可以在Terminal中进行下载，或者把软件下载到本地然后在Terminal中进行安装</li>
</ol>
<p><strong>预告：下一篇会讲一下关于本地安装软件时遇到的坑和解决办法，教你怎么自己去处理出现的错误，绝对实用！</strong></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;想用Linux系统而因为安装软件一直出错而放弃使用的同学，举个手。。。&lt;br&gt;那么我们现在就来解决软件安装的问题&lt;br&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://shic.top/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://shic.top/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Hello Ubuntu</title>
    <link href="http://shic.top/2017/12/23/U_Hello_Ubuntu/"/>
    <id>http://shic.top/2017/12/23/U_Hello_Ubuntu/</id>
    <published>2017-12-22T16:00:00.000Z</published>
    <updated>2017-12-23T15:35:16.842Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Ubuntu-Install-Hello-Ubuntu"><a href="#Ubuntu-Install-Hello-Ubuntu" class="headerlink" title="Ubuntu Install|Hello Ubuntu"></a><center>Ubuntu Install|Hello Ubuntu</center></h2><p>我就知道你需要用到Linux，不然为什么想去安装使用它，肯定是学习上，搞开发，做实践等有需求，那我们就进入Linux的世界吧</p>
<p><center><img src="http://res.cloudinary.com/shi1996/image/upload/v1514043169/Ubuntu_tp58kw.jpg" alt="00"></center><br><a id="more"></a></p>
<ul>
<li>以Ubuntu 17.10为例，<a href="https://www.ubuntu.com/desktop/1710" target="_blank" rel="external">下载地址</a><ul>
<li>在电脑硬盘上安装。</li>
<li>做即插即用的U盘Ubuntu，随身携带。</li>
</ul>
</li>
<li>测试怎么即插即用<br><br></li>
</ul>
<h3 id="制作U盘启动盘"><a href="#制作U盘启动盘" class="headerlink" title="制作U盘启动盘"></a>制作U盘启动盘</h3><p>当你下载好了Ubuntu系统后，可以用一个大于2GB的U盘来做启动盘。这样这个U盘既可以做临时的系统使用盘，也可以给其他电脑装系统。当然之后我们会制作专门的U盘系统盘，而且是在任意一台电脑上都能运行的。<br><br></p>
<ol>
<li>使用软件<strong>UltralISO</strong>把刚才下载的Ubuntu的镜像文件写入U盘。这个操作会清空U盘里的所有东西，<strong>请注意数据备份</strong>。而有些UltralISO版本可能导致这一步出错，我用的是9.5.5，可以用这个版本进行操作。**点击图中的文件，点击打开，然后找到事先下载好的ISO文件，点击确认   <img src="http://res.cloudinary.com/shi1996/image/upload/v1514039570/UltraISO_qybgeo.jpg" alt="0"></li>
<li>打开之后就会是这样的界面，按照图中指示操作   <img src="http://res.cloudinary.com/shi1996/image/upload/v1514039571/UltraISO1_h4vuzs.jpg" alt="1"></li>
<li>之后就进入了这个界面，继续按照图中指示操作,然后就会提示你引导扇区写入成功！，在点击写入，点击是，完成之后直接关掉窗口和该软件就行，这时U盘启动器就制作好啦   <img src="http://res.cloudinary.com/shi1996/image/upload/v1514039571/UltrISO2_jmk94s.jpg" alt="2"><br><br></li>
</ol>
<h3 id="安装系统"><a href="#安装系统" class="headerlink" title="安装系统"></a>安装系统</h3><ol>
<li>准备安装的硬盘位置<ul>
<li>装在电脑上<ul>
<li>与Windows同在一个硬盘，事先分一部分磁盘空间出去，具体方法网上可查</li>
<li>在同一台电脑上的另一个空硬盘上</li>
</ul>
</li>
<li>装在可移动的U盘里，其实这个和空硬盘一样，只是U盘是插在UBS接口上的</li>
</ul>
</li>
<li>U盘插上电脑，进入电脑的BIOS，具体机型按键不同，可以去网上查一下你的机型怎么进去。当然不相查的话，可以ESC，F2，F12等常用按键一起按，然后就进去了。再去设置你的U盘为第一启动项，保存关机，重启电脑。</li>
<li>然后你应该会看到这个界面，很多同学就会以为没有正确选择U盘为第一启动项，然后一直都卡在这里，其实不是的，这表示已经进入U盘了，你只需要输入<strong>live</strong>，点击回车，等待几秒钟就会进入Ubuntu的安装界面。   <img src="http://res.cloudinary.com/shi1996/image/upload/v1514037550/IMG_20171222_205806_HHT_w7evil.jpg" alt="3"></li>
<li>第一步是<strong>断网！</strong>因为之后在更改软件源后再更新系统和软件这样快些，在安装时更新或者一不小心选择了更新就会特别慢。其次是选择系统语言，然后是一些不重要的操作，当到了问你安装在哪个磁盘里的时候，可能有些同学就犯傻了。<ul>
<li>如果安装在有windows的硬盘上，会有提醒，请选择与Windows共存，不然你的Windows系统就没了。</li>
<li>如果是<strong>在另一块空硬盘或者想把系统装在U盘里</strong>就不用这样选，但是安装时还是会提醒让你选择，也会出现与Windows共存的选择，估计是默认安装到的是有Windows的盘里，大家可以进行安装位置的选择，因为安装时不方便保留截图，所以具体方法可以网上查一下。<strong>其实也不用这么麻烦，不用去查，直接换一种方案，把有Windows的硬盘从电脑中拔掉就行了，这样就不会让你选择了，就只会有这个空余的盘。就会出现如下的图，也不会有过多的分区挂载的操作</strong> 然后一路继续点起走～  <img src="http://res.cloudinary.com/shi1996/image/upload/v1514037553/IMG_20171222_210902_eusnqe.jpg" alt="4"></li>
</ul>
</li>
<li>等到系统安装完成后，点击继续，确认等肯定的选择后就重启电脑进入新安装的Ubuntu系统了，重启时等到屏幕黑屏就可以拔掉启动盘了<br><br></li>
</ol>
<h3 id="进入新系统"><a href="#进入新系统" class="headerlink" title="进入新系统"></a>进入新系统</h3><p>重启电脑进入系统后，就能看见这个全新安装的Ubuntu OS了。是不是很有新鲜感呢～   <img src="http://res.cloudinary.com/shi1996/image/upload/v1514032606/update0_xd4tbi.png" alt="5"> <strong>之后还有关于Ubuntu安装常用软件，远程操作等教程，其实很多同学就是因为不能成功安装软件而导致系统无法使用而放弃它，下一篇讲介绍一些软件的安装和需要注意的坑，请持续关注更新吧～</strong></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Ubuntu-Install-Hello-Ubuntu&quot;&gt;&lt;a href=&quot;#Ubuntu-Install-Hello-Ubuntu&quot; class=&quot;headerlink&quot; title=&quot;Ubuntu Install|Hello Ubuntu&quot;&gt;&lt;/a&gt;&lt;center&gt;Ubuntu Install|Hello Ubuntu&lt;/center&gt;&lt;/h2&gt;&lt;p&gt;我就知道你需要用到Linux，不然为什么想去安装使用它，肯定是学习上，搞开发，做实践等有需求，那我们就进入Linux的世界吧&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;img src=&quot;http://res.cloudinary.com/shi1996/image/upload/v1514043169/Ubuntu_tp58kw.jpg&quot; alt=&quot;00&quot;&gt;&lt;/center&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://shic.top/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://shic.top/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>维持你电脑的快速</title>
    <link href="http://shic.top/2017/12/21/keep_fast_compt/"/>
    <id>http://shic.top/2017/12/21/keep_fast_compt/</id>
    <published>2017-12-20T16:00:00.000Z</published>
    <updated>2017-12-21T09:33:18.382Z</updated>
    
    <content type="html"><![CDATA[<h2 id="保持电脑快速的正确操作方式"><a href="#保持电脑快速的正确操作方式" class="headerlink" title="保持电脑快速的正确操作方式"></a><center>保持电脑快速的正确操作方式</center></h2><p>很多人得答案肯定都是：要！不然怎么杀毒怎么保护电脑，怎么清理垃圾，怎么保持电脑得快速？<br><a id="more"></a><br><br><br><strong>但是答案是：坚决不要用国产得安全软件</strong><br><br><br>那肯定就有同学不相信了，那就解决往下看：</p>
<p><center><img src="/images/让电脑飞/战术目镜.jpg" alt="战术目镜"></center><br><br><br>当然，为了节约时间，我就不一一做测试了，我就搬用一下电脑报的文章就行了，他们做得很好,点击链接阅读精华文章！。</p>
<h3 id="怎么安装软件才好？"><a href="#怎么安装软件才好？" class="headerlink" title="怎么安装软件才好？"></a>怎么安装软件才好？</h3><ul>
<li>不要乱装软件：<a href="https://mp.weixin.qq.com/s?__biz=MzI5NjMwMDMxNQ==&amp;mid=2247483741&amp;idx=1&amp;sn=67310069b074ce0aaefacdf141f6e9d8#rd" target="_blank" rel="external">国产软件慎装篇</a></li>
<li>留心电脑的预装软件：<a href="http://mp.weixin.qq.com/s?__biz=MzI5NjMwMDMxNQ==&amp;mid=2247483725&amp;idx=1&amp;sn=28934af517b082fe6ceb7377e7df32a3#rd" target="_blank" rel="external">预装软件篇</a></li>
</ul>
<p><br></p>
<h3 id="关于杀毒软件的必备知识"><a href="#关于杀毒软件的必备知识" class="headerlink" title="关于杀毒软件的必备知识"></a>关于杀毒软件的必备知识</h3><ul>
<li>不推荐安装国产杀毒软件，原因看<strong><a href="https://mp.weixin.qq.com/s?__biz=MzI5NjMwMDMxNQ==&amp;mid=2247483741&amp;idx=1&amp;sn=67310069b074ce0aaefacdf141f6e9d8#rd" target="_blank" rel="external">软件篇第一篇文章</a></strong></li>
<li>清理垃圾的正确方式：<a href="http://mp.weixin.qq.com/s?__biz=MzI5NjMwMDMxNQ==&amp;mid=2247483957&amp;idx=2&amp;sn=ea7642329ec126bcc1aa696e646fb67b#rd" target="_blank" rel="external">360不建议装，用什么清理系统垃圾呢？</a></li>
<li>科普贴：<a href="http://mp.weixin.qq.com/s?__biz=MzI5NjMwMDMxNQ==&amp;mid=2247483857&amp;idx=3&amp;sn=80fa30f531252b293865455491a17ba9#rd" target="_blank" rel="external">国产杀软不能装，用什么替换呢？</a></li>
<li>电脑报的独家测试：<a href="http://mp.weixin.qq.com/s?__biz=MzI5NjMwMDMxNQ==&amp;mid=2247484628&amp;idx=1&amp;sn=9f3d7289b758a89a08eabb7edf5848b4#rd" target="_blank" rel="external">不能装360杀毒，Win10裸奔扛得住病毒吗？</a><br><br></li>
</ul>
<h3 id="清灰的后续正确操作"><a href="#清灰的后续正确操作" class="headerlink" title="清灰的后续正确操作"></a>清灰的后续正确操作</h3><ol>
<li>把散热拆了看看<img src="http://res.cloudinary.com/shi1996/image/upload/v1513846579/%E6%95%A3%E7%83%AD_mkywuo.jpg" alt="散热">其实不看别的，就看看硅脂。。。要是太干的话，那就换吧。</li>
<li>再看看处理器和显卡，应该早已干涸了吧，一个好的散热也是电脑性能正常输出的保障 <img src="http://res.cloudinary.com/shi1996/image/upload/v1513846672/cpu_itc7s4.jpg" alt="i7-4710MQ"> 把上面干掉的硅脂都擦掉，可用电吹风加热一下干化的硅脂，擦除的时候注意芯片上的电容 <img src="http://res.cloudinary.com/shi1996/image/upload/v1513846716/GPu_y06wb1.jpg" alt="GTX950M"></li>
<li>涂上新的硅脂 <img src="http://res.cloudinary.com/shi1996/image/upload/v1513846702/%E6%B6%82_lprkuc.jpg" alt="t涂硅脂"></li>
<li>然后再安装回去。<br><br></li>
</ol>
<h3 id="怎么样通过Windows更新升级到秋季创意者更新版-1709"><a href="#怎么样通过Windows更新升级到秋季创意者更新版-1709" class="headerlink" title="怎么样通过Windows更新升级到秋季创意者更新版(1709)"></a>怎么样通过Windows更新升级到秋季创意者更新版(1709)</h3><p>对于很多想更新系统的同学来说，明明win10的1709版都更新了很久了，为什么自己还没有收到更新提示？那有可能需要自己去操作一番了。（当然也可以用易升，两种方法差别不是太大，都是在重新下载安装新的系统，更新完成后激活状态不变）</p>
<ol>
<li>首先按win键，然后输入汉字 ：编辑组策略。（注：有可能家庭版不支持，手头没家庭版电脑没有测试），然后打开</li>
<li>跟着图中操作（点击查看大图） <img src="http://res.cloudinary.com/shi1996/image/upload/v1513847777/%E7%BC%96%E8%BE%91%E7%BB%84%E7%AD%96%E5%92%AF_cqetjo.jpg" alt="ops"></li>
<li>去系统设置的更新里面检查更新，然后就会有更新的提示了  <img src="http://res.cloudinary.com/shi1996/image/upload/v1513847814/updateTo1709_v8fo9q.png" alt="update_to_1709"></li>
<li>有可能这样更改后系统的什么小更新都要收到，只是有可能，那么把它改回去就行了。<br><br></li>
</ol>
<h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>在你看明白之后，我相信你对电脑的使用会更加的科学，就像我家的7年老电脑，照样可以流畅的运行。是不是挺好的呢~    </p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;保持电脑快速的正确操作方式&quot;&gt;&lt;a href=&quot;#保持电脑快速的正确操作方式&quot; class=&quot;headerlink&quot; title=&quot;保持电脑快速的正确操作方式&quot;&gt;&lt;/a&gt;&lt;center&gt;保持电脑快速的正确操作方式&lt;/center&gt;&lt;/h2&gt;&lt;p&gt;很多人得答案肯定都是：要！不然怎么杀毒怎么保护电脑，怎么清理垃圾，怎么保持电脑得快速？&lt;br&gt;
    
    </summary>
    
      <category term="让电脑飞" scheme="http://shic.top/categories/%E8%AE%A9%E7%94%B5%E8%84%91%E9%A3%9E/"/>
    
    
      <category term="让电脑飞" scheme="http://shic.top/tags/%E8%AE%A9%E7%94%B5%E8%84%91%E9%A3%9E/"/>
    
  </entry>
  
  <entry>
    <title>Battle Symphony</title>
    <link href="http://shic.top/2017/11/24/Battle%20Symphony/"/>
    <id>http://shic.top/2017/11/24/Battle Symphony/</id>
    <published>2017-11-23T16:00:00.000Z</published>
    <updated>2017-12-27T13:01:45.712Z</updated>
    
    <content type="html"><![CDATA[<p><strong>不管你现在有多痛苦，都要加油好好干，都希望你以后能够好好的，都不要被别人左右了你前进的方向，不管前方的路有多艰辛，都不要放弃！</strong><br><a id="more"></a><br>半年前，正是初夏。每天我都会去挤点时间看NBA季后赛，每天看完后都觉得自己又能量满满，他们的精神鼓励了我。每天都会有季后赛的战况宣传片，里面放的歌我记忆犹新。<br><strong>听歌一首，与知己者共赏～</strong></p>
<h3 id="Battle-Symphony"><a href="#Battle-Symphony" class="headerlink" title="Battle Symphony"></a>Battle Symphony</h3><p><audio src="http://www.0dutv.com/plug/down/up2.php/201068780.mp3" controls="controls"></audio><br>I got a long way to go<br>漫漫路途在我前头<br>And a long memory<br>留下冗长的记忆<br>I been searching for an answer<br>我一直在探索真正的答案<br>Always just out of reach<br>却总差一尺之距<br>Blood on the floor<br>热血地上挥洒过<br>Sirens repeat<br>扰音回荡不停<br>I been searching for the courage<br>我不断地寻找坚毅的勇气<br>To face my enemies<br>以直面我的夙敌<br>When they turn down the lights<br>当他们将光芒熄灭掩盖<br>I hear my battle symphony<br>我听到我的战乐响起<br>All the world in front of me<br>浩航世界呈现在眼底<br>If my armor breaks<br>若我铠甲被打碎<br>I’ll fuse it back together<br>我要将碎片熔铸缝合<br>Battle symphony<br>战斗交响曲<br>Please just don’t give up on me<br>请勿轻易地把我放弃<br>And my eyes are wide awake<br>我的双目依旧清醒<br>For my battle symphony<br>为我的战斗交响曲<br>For my battle symphony<br>为我的战斗交响曲<br>“<center><img src="http://res.cloudinary.com/shi1996/image/upload/v1511440867/Kyrie_Irving_guwppx.png" alt="Kyrie Irving"></center>“</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;不管你现在有多痛苦，都要加油好好干，都希望你以后能够好好的，都不要被别人左右了你前进的方向，不管前方的路有多艰辛，都不要放弃！&lt;/strong&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Others" scheme="http://shic.top/categories/Others/"/>
    
    
      <category term="Others" scheme="http://shic.top/tags/Others/"/>
    
  </entry>
  
</feed>
